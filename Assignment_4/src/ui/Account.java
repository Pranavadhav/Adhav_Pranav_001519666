/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import model.PatientDirectory;
import model.Test;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kishore
 */
public class Account extends javax.swing.JPanel {

    /**
     * Creates new form Account
     */
    private JPanel userProcessContainer;
    private PatientDirectory fleetDirectory;

    Account(JPanel userProcessContainer, PatientDirectory fleetDirectory) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.fleetDirectory = fleetDirectory;
        populate();
    }

    public void updatedTime() {
//        List<Date> datesList = new ArrayList<>();
//        for (Test c : fleetDirectory.getPatientList()) {
//            datesList.add(c.getUpdatedDate());
//        }
//        Collections.sort(datesList, Comparator.reverseOrder());
//        fleetDirectory.setUpdatedDate(datesList.get(0).toString());
       
    }

    public void populate() {
        DefaultTableModel dtm = (DefaultTableModel) tblfleetDirectory.getModel();
        dtm.setRowCount(0);

        for (Test c : fleetDirectory.getPatientList()) {
            Object[] row = new Object[dtm.getColumnCount()];
            row[10] = c;
            row[0] = c.getFirstname();
            row[1] = c.getLastname();
            row[2] = c.getDob();
            row[4] = c.getNumber();
            row[5] = c.getEmail();
            row[6] = c.getComm();
            row[7] = c.getCity();
            row[8] = c.getBp();
            
            if(c.getDob()> 0 && c.getDob()<= 5){
                c.setAgegroup("Infant");
                row[3] = c.getAgegroup();
            }else if(c.getDob()> 5 && c.getDob()<= 12){
               c.setAgegroup("Child");
                row[3] = c.getAgegroup(); 
            } else if(c.getDob()> 12 && c.getDob()<= 21){
               c.setAgegroup("Young");
                row[3] = c.getAgegroup(); 
            } else if(c.getDob()> 21 && c.getDob()<= 50){
               c.setAgegroup("Adult");
                row[3] = c.getAgegroup(); 
            }else {
                c.setAgegroup("Old");
                row[3] = c.getAgegroup(); 
            }
           
            if(c.getBp()>75 && c.getBp()<=120){
                c.setStatus("Normal");
                row[9]=c.getStatus();  
            }
            else{
                c.setStatus("Abnormal");
                row[9]=c.getStatus();
            }
       
            dtm.addRow(row);
        }
//        availableStatus();
//        updatedTime();
    }

//    public void availableStatus() {
//        int availableNumber = 0;
//        int unavailableNumber = 0;
//        for (Test car : fleetDirectory.getCarList()) {
//            if (car.isavailabilityStatus() == true) {
//                availableNumber = availableNumber + 1;
//            } else if (car.isavailabilityStatus() == false) {
//                unavailableNumber = unavailableNumber + 1;
//            }
//        }
//        txtAvailableCars.setText(Integer.toString(availableNumber));
//        txtUnavailableCars.setText(Integer.toString(unavailableNumber));
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPanel = new javax.swing.JScrollPane();
        tblfleetDirectory = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        txtMinSeats = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        btnSearchSeats = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtMaxSeats = new javax.swing.JTextField();
        btnRefresh = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        tblfleetDirectory.setBackground(new java.awt.Color(0, 0, 0));
        tblfleetDirectory.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 51, 0)));
        tblfleetDirectory.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        tblfleetDirectory.setForeground(new java.awt.Color(255, 255, 255));
        tblfleetDirectory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "First Name", "Last Name", "Age", "Age Group", "Mobile Number", "Email ID", "Communtiy", "City", "Blood Pressure", "Status", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPanel.setViewportView(tblfleetDirectory);
        if (tblfleetDirectory.getColumnModel().getColumnCount() > 0) {
            tblfleetDirectory.getColumnModel().getColumn(0).setResizable(false);
            tblfleetDirectory.getColumnModel().getColumn(1).setResizable(false);
            tblfleetDirectory.getColumnModel().getColumn(2).setResizable(false);
            tblfleetDirectory.getColumnModel().getColumn(3).setResizable(false);
            tblfleetDirectory.getColumnModel().getColumn(4).setResizable(false);
            tblfleetDirectory.getColumnModel().getColumn(5).setResizable(false);
            tblfleetDirectory.getColumnModel().getColumn(6).setResizable(false);
            tblfleetDirectory.getColumnModel().getColumn(7).setResizable(false);
            tblfleetDirectory.getColumnModel().getColumn(8).setResizable(false);
            tblfleetDirectory.getColumnModel().getColumn(9).setResizable(false);
            tblfleetDirectory.getColumnModel().getColumn(10).setResizable(false);
            tblfleetDirectory.getColumnModel().getColumn(10).setPreferredWidth(0);
        }

        btnBack.setBackground(new java.awt.Color(102, 102, 255));
        btnBack.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnBack.setText(" Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        txtMinSeats.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel5.setText("Status:");

        btnSearchSeats.setBackground(new java.awt.Color(102, 255, 102));
        btnSearchSeats.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnSearchSeats.setText("Search");
        btnSearchSeats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchSeatsActionPerformed(evt);
            }
        });

        btnView.setBackground(new java.awt.Color(255, 255, 102));
        btnView.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel6.setText("Community:");

        txtMaxSeats.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        btnRefresh.setBackground(new java.awt.Color(255, 153, 255));
        btnRefresh.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(255, 51, 51));
        btnDelete.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtMinSeats, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtMaxSeats, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46)
                                .addComponent(btnSearchSeats)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnRefresh)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBack))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 914, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(53, Short.MAX_VALUE))))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnBack, btnDelete, btnRefresh, btnView});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnRefresh)
                            .addComponent(btnDelete)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtMinSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMaxSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearchSeats))))
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnView)
                    .addComponent(btnBack))
                .addContainerGap(57, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Details");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(246, 246, 246)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblfleetDirectory.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row");
        } else {
            Test car = (Test) tblfleetDirectory.getValueAt(selectedRow, 10);
            ViewAccount panel = new ViewAccount(userProcessContainer, fleetDirectory, car);
            userProcessContainer.add("ViewJPanel", panel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSearchSeatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchSeatsActionPerformed
        // TODO add your handling code here:
        String status = txtMinSeats.getText();
        String city = txtMaxSeats.getText();
        
//        int minSeats = Integer.parseInt(txtMinSeats.getText());
//        System.out.println(minSeats);
//        int maxSeats = Integer.parseInt(txtMaxSeats.getText());
//        System.out.println(maxSeats);
        DefaultTableModel dtm = (DefaultTableModel) tblfleetDirectory.getModel();
        dtm.setRowCount(0);
        for (Test c : fleetDirectory.getPatientList()) {
            if (c.getStatus().matches(status) && c.getComm().matches(city)) {
                
                
             Object row[] = new Object[dtm.getColumnCount()];
                        row[0] = c.getFirstname();
            row[1] = c.getLastname();
            row[2] = c.getDob();
            row[3]= c.getAgegroup();
            row[4] = c.getNumber();
            row[5] = c.getEmail();
            row[6] = c.getComm();
            row[7] = c.getCity();
            row[8] = c.getBp();
            row[9] = c.getStatus();
      
                    dtm.addRow(row);

            }
        }
    }//GEN-LAST:event_btnSearchSeatsActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        populate();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblfleetDirectory.getSelectedRow();
        if (selectedRow >= 0) {
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "Are You Sure, Would you like to delete the details", "Warning", dialogButton);
            if (dialogResult == JOptionPane.YES_OPTION) {
                Test car = (Test) tblfleetDirectory.getValueAt(selectedRow, 10);
                fleetDirectory.deleteAccount(car);
                populate();
//                listOfManufactures();
                
            } else {
                JOptionPane.showMessageDialog(null, "Please select a row", "Warning", JOptionPane.WARNING_MESSAGE);
            }
        }
        
        
    }//GEN-LAST:event_btnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSearchSeats;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPanel;
    private javax.swing.JTable tblfleetDirectory;
    private javax.swing.JTextField txtMaxSeats;
    private javax.swing.JTextField txtMinSeats;
    // End of variables declaration//GEN-END:variables
}
